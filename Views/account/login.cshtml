@{
    ViewData["Title"] = "Products";
    Layout = null;
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Đăng nhập</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
</head>
<body class="flex items-center justify-center min-h-screen bg-gray-100">
    <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-md relative">
        <h1 class="text-2xl font-bold text-center text-gray-800 mb-8">ĐĂNG NHẬP</h1>
        <form id="loginForm">
            <div class="mb-4">
                <label for="usernameOrEmail" class="block text-sm font-medium text-gray-700 mb-1">Email hoặc tên đăng nhập</label>
                <div class="relative">
                    <input type="text" id="usernameOrEmail" required class="w-full pl-10 pr-3 py-2 border rounded-md focus:ring focus:ring-blue-500 focus:outline-none">
                     <i class="fas fa-user absolute left-3 top-2.5 text-gray-500"></i>
                </div>
            </div>
            <div class="mb-4">
                <label for="loginPassword" class="block text-sm font-medium text-gray-700 mb-1">Mật khẩu</label>
                <div class="relative">
                    <input type="password" id="loginPassword" required class="w-full pl-10 pr-10 py-2 border rounded-md focus:ring focus:ring-blue-500 focus:outline-none">
                    <i class="fas fa-lock absolute left-3 top-2.5 text-gray-500"></i>
                    <button type="button" class="absolute inset-y-0 right-3 flex items-center text-gray-500 hover:text-gray-700" id="togglePassword">
                        <i class="fas fa-eye"></i>
                    </button>
                </div>
            </div>
            <div class="text-right mb-4">
                <a href="#" class="text-sm text-gray-500 hover:text-blue-500">Quên mật khẩu?</a>
            </div>
            <button type="submit" id="btn-login" class="w-full !bg-[#213555] text-white py-2 rounded-md hover:bg-blue-800 flex items-center justify-center gap-2">
                <i class="fas fa-sign-in-alt"></i>
                ĐĂNG NHẬP
            </button>
        </form>
        <div class="flex items-center my-6">
            <div class="border-t border-gray-300 flex-grow"></div>
            <span class="px-3 text-sm text-gray-500">hoặc đăng nhập bằng</span>
            <div class="border-t border-gray-300 flex-grow"></div>
        </div>
        <div class="grid grid-cols-2 gap-4 mb-6">
            <button class="flex items-center justify-center gap-2 py-2 border border-gray-300 rounded-md hover:bg-gray-100">
                <i class="fab fa-google text-red-500"></i>
                Google
            </button>
            <button class="flex items-center justify-center gap-2 py-2 !bg-[#213555] text-white rounded-md hover:bg-blue-800">
                <i class="fab fa-facebook-f"></i>
                Facebook
            </button>
        </div>
        <div class="text-center text-sm text-gray-500">
            <span>Bạn chưa có tài khoản? </span>
            <a asp-controller="account" asp-action="register" class="text-blue-700 font-medium hover:underline">Đăng ký ngay!</a>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // Hiển thị thông báo bằng SweetAlert2
function showAlert(message, type = "success") {
    Swal.fire({
        icon: type,
        title: type === "success" ? "Thành công" : "Lỗi",
        text: message,
        confirmButtonText: "OK"
    });
}
       // Toggle Password Visibility
const togglePassword = document.getElementById("togglePassword");
const passwordInput = document.getElementById("loginPassword");

togglePassword.addEventListener("click", function () {
    const type = passwordInput.getAttribute("type") === "password" ? "text" : "password";
    passwordInput.setAttribute("type", type);
    this.innerHTML = type === "password"
        ? '<i class="fas fa-eye"></i>'
        : '<i class="fas fa-eye-slash"></i>';
});

// Xử lý đăng nhập
document.querySelector("#loginForm").addEventListener("submit", async (event) => {
    event.preventDefault();

    const usernameOrEmail = document.querySelector("#usernameOrEmail").value.trim();
    const password = document.querySelector("#loginPassword").value.trim();

    if (!usernameOrEmail || !password) {
        showAlert("Vui lòng nhập đầy đủ thông tin!", "warning");
        return;
    }

    const loginData = { Username: usernameOrEmail, Password: password };

    try {
        const response = await fetch('/api/User/Login', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(loginData)
        });

        if (response.ok) {
            const data = await response.json();
            console.log(data);
            
            // Lưu token vào localStorage với thời gian hết hạn (15 phút)
            const expirationTime = new Date().getTime() + 15 * 60 * 1000; // 15 phút
            localStorage.setItem("accessToken", JSON.stringify({ token: data.accessToken, expiresAt: expirationTime }));
            localStorage.setItem("username", data.user.username);
            localStorage.setItem("UserID",data.user.userID);
            localStorage.setItem("role", data.user.role); // Lưu role của người dùng
            
            showAlert("Đăng nhập thành công!", "success");

            setTimeout(() => {
                // Kiểm tra nếu role là admin, chuyển hướng sang trang admin
                if (data.user.role === "admin") {
                    window.location.href = "/admin";
                } else {
                    window.location.href = "/";
                }
            }, 1000);
        } else {
            showAlert("Đăng nhập thất bại, sai tài khoản hoặc mật khẩu!", "error");
        }
    } catch (error) {
        console.error("Lỗi:", error);
        showAlert("Không thể kết nối đến server.", "error");
    }
});

// Kiểm tra trạng thái đăng nhập mỗi giây
function checkLoginStatus() {
    const storedToken = localStorage.getItem("accessToken");
    console.log(storedToken);

    if (storedToken) {
        const { token, expiresAt } = JSON.parse(storedToken);
        const currentTime = new Date().getTime();

        if (currentTime > expiresAt) {
            // Token đã hết hạn -> Xóa khỏi localStorage và yêu cầu đăng nhập lại
            localStorage.removeItem("accessToken");
            localStorage.removeItem("username");
            console.log("Token đã hết hạn và bị xóa.");
            
        }
    }
}

// Gọi hàm kiểm tra mỗi giây để đảm bảo token bị xóa đúng lúc
setInterval(checkLoginStatus, 1000);

// Khi tải trang, kiểm tra trạng thái đăng nhập ngay lập tức
document.addEventListener("DOMContentLoaded", checkLoginStatus);

    </script>

</body>
</html>
